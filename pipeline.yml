---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resources:
- name: platform-automation
  type: pivnet
  source:
    product_slug: platform-automation
    api_token: ((pivnet-refresh-token))
- name: config
  type: git
  source:
    uri: ((pipeline-repo))
    private_key: ((plat-auto-pipes-deploy-key.private_key))
    branch: master

credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: https://10.1.0.6:8844
    CREDHUB_CA_CERT: ((credhub-ca-cert))
    PREFIX: /concourse/main/foundation
  input_mapping:
    files: config
  output_mapping:
    interpolated-files: interpolated-config




jobs:
- name: install-ops-manager
  serial: true
  plan:
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: download-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      params:
        CONFIG_FILE: download-ops-manager.yml
      input_mapping:
        config: interpolated-config
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      params:
        OPSMAN_CONFIG_FILE: opsman.yml
      input_mapping:
        config: interpolated-config
        state: config
        image: downloaded-product
      ensure:
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: config
              file-source: generated-state
            output_mapping:
              repository-commit: config-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: state.yml
              GIT_AUTHOR_EMAIL: "hari@harivemula.com" 
              GIT_AUTHOR_NAME: "Platform Automation Bot"
              COMMIT_MESSAGE: 'Update state file'
          - put: config
            params:
              repository: config-commit
              merge: true


- name: configure-ops-manager
  plan:
  - aggregate:
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config
      passed: [install-ops-manager]
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 10
    input_mapping:
      env: interpolated-config
      config: interpolated-config
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: interpolated-config
      env: interpolated-config



- name: apply-director-changes
  plan:
  - aggregate:
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config
      passed: [configure-ops-manager]
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-config


- name: export-installation 
  plan:
  - aggregate:
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config
      passed: [apply-director-changes]
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-config
    params:
      INSTALLATION_FILE: installation-$timestamp.zip

#  - task: make-commit
#    image: platform-automation-image
#    file: platform-automation-tasks/tasks/make-git-commit.yml
#    input_mapping:
#      repository: config
#      file-source: generated-state
#    output_mapping:
#      repository-commit: config-commit
#    params:
#      FILE_SOURCE_PATH: state.yml
#      FILE_DESTINATION_PATH: state.yml
#      GIT_AUTHOR_EMAIL: "hari@harivemula.com" 
#      GIT_AUTHOR_NAME: "Platform Automation Bot"
#      COMMIT_MESSAGE: 'Update state file'
#  - put: config
#    params:
#    repository: config-commit
#      merge: true

---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource


resources:
- name: platform-automation
  type: pivnet
  source:
    product_slug: platform-automation
    api_token: ((pivnet-refresh-token))

- name: config
  type: git
  source:
    uri: ((pipeline-repo))
    private_key: ((plat-auto-pipes-deploy-key.private_key))
    branch: master

- name: installation
  type: gcs
  source:
    regexp: installations/installation-(.*).zip
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp_service_account_json))

credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: https://10.1.0.6:8844
    CREDHUB_CA_CERT: ((credhub-ca-cert))
    PREFIX: /concourse/main/foundation
  input_mapping:
    files: config
  output_mapping:
    interpolated-files: interpolated-config

jobs:
- name: delete-foundation
  serial: true
  plan: 
  - aggregate:
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: config

  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-config
    params:
      ENV_FILE: env.yml
      INSTALLATION_FILE: installation-$timestamp.zip
  - put: installation
    params:
      file: installation/installation*.zip
  - task: delete-opsmanager-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/delete-installation.yml
    input_mapping:
      env: interpolated-config
    params:
      ENV_FILE: env.yml

  - task: delete-opsmanager-vm
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/delete-vm.yml
    input_mapping:
      state: config
      config: config
    params:
      OPSMAN_CONFIG_FILE: opsman.yml
      STATE_FILE: state.yml
    ensure:
      do:
        - task: make-commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: config
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: state.yml
            GIT_AUTHOR_EMAIL: "hari@harivemula.com"
            GIT_AUTHOR_NAME: "PCF Automation Bot"
            COMMIT_MESSAGE: 'Update state file'
        - put: config
          params:
            repository: configuration-commit
            merge: true



